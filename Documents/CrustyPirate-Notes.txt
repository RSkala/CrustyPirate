====================================
Crusty Pirate

--------------------------
Source:
https://www.udemy.com/course/unreal-engine-2d/learn/lecture/44290176#overview

Source Assets:
https://pixelfrog-assets.itch.io/treasure-hunters

-----------------------------------

==================================================================================
61. Creating the Project

Default Level/Map: L_Level_1

Settings:
* Edit -> Project Settings:
  * Engine -> Rendering -> Default Settings:
    * Motion Blur: OFF
    * Auto Exposure: OFF
    * Auto Exposure: Manual
    * Auto Exposure Bias:  0.0
    * Anti-Aliasing Method:  None
TODO: Probably disable Bloom as well
  * Editor -> Paper 2D - Import:
    * Default Pixels Per Unreal Unit: 0.5

All Textures -> Apply Paper 2D Texture Settings

---------------------------
CrustyPirate.Build.cs
C:\Dev\Udemy\2DCourseProjects\CrustyPirate\Source\CrustyPirate\CrustyPirate.Build.cs

* Add "Paper2D" to PublicDependencyModuleNames
PublicDependencyModuleNames.AddRange(new string[] { "Core", "CoreUObject", "Engine", "InputCore", "EnhancedInput", "Paper2D" });

==================================================================================
62. Sprites and Flipbooks

-------------------------------
Standard Flipbook Workflow:
Sprite Actions -> Extract Sprites
-> Sprite Extract Mode: Grid, adjust Cell Width and Height -> Extract

Select all extracted Sprites -> Create Flipbook

NAME: PFB_<flipbook-name>
e.g. PFB_Captain_Attack

Drag into Flipbooks folder for that character / object

Then setting proper "Frame Rates" for the Flipbooks
* Select All -> Right-click -> Asset Actions -> Edit Selection in Property Matrix
------------------------------

==================================================================================
63. Tile Sets

-----------------------------------------------------
TileSet / TileMap Workflow:
* First, you need to create a TileSet from a Texture.
* Then, you need to create a TileMap from the TileSet.

1. Have Texture asset
2. Create TileSet from Texture
3. Create TileMap from TileSet
-----------------------------------------------------

Create TileSet:
* Right-click Texture -> Sprite Actions -> Create TileSet
  * Naming Convention:  TS_<tileset-name>
  * Open TileSet, set the Tile Size

Assigning Collision Data for Tiles:
* Select a Tile -> Top Menu -> Add Box
  * In the Single Tile Editor, you can select the collision and also select individual vertices.
  * You can adjust the size of the collision boxes by selecting vertices and dragging to resize the box shape
    * Can also select the line (edge of the box collision) and it will select the entire line to adjust.

Note: You can use multiple TileSets in a single TileMap!

==================================================================================
64. TileMaps

Create TileMap:
* Right-click a TileSet -> Create TileMap

Editing a TileMap:
* Paint (B), Erase (E), Fill Tools (G)

* Select a Tile and click in the TileMap Preview
* Hold hold and drag to select and Paint multiple tiles at once
* Hold Shift in the TileMap editor to "Grab" and select a section to copy and Paint with
  * Note: Paint mode must be selected


* Change the Active TileSet:
  * Below the Tools, select "Active Tile Set"

------------------------------------------
Changing the TileMap in Details
* Setup
  * Map Width  : 30
  * Map Height : 30
  * Material:   TranslucentUnlitSpriteMaterial


------------------------------------------
TileMap Layers
* Layer on Top is displayed before the one on the bottom
* Layers can also be Renamed
* To turn collision OFF a Layer, select the layer:
  * Details -> Selected Layer -> Layer Collides: FALSE

------------------------------------------
Place TileMap In Game
* Simply Drag TileMap into the Viewport

Details:
* Rendering -> Advanced -> Translucency Sort Priority
  * Change this to make sure the 2D sorting is correct.
  * Leaving it at 0

-----------------------------------------
Conditioning TileSets
IMPORTANT:
* If you get strange lines in your tilemap either while running or in the TileMap editor:
  * In the Tilemap Editor, you may be dotted red lines and in game it may look like black lines
* Your TileSet needs to be CONDITIONED.
* IMPORTANT NOTE:
  * Make sure your TileMap changes are saved and committed to version control before "conditioning"!
  * Conditioning seems to add extra pixels around the tiles or something

Right-click the TileSet (NOT the TileMap):
* Tile Set Actions -> Condition Tile Sheet Texture
  * This creates a NEW Texture asset called <Texture-Name>_Padded
    * The Texture is created from the Texture the TileMap was originally referencing
  * These new textures have "edges" created in the texture to prevent the "gaps" (which cause the lines)
  * The TileSets NOW have a NEW texture referenced in Details -> Tile Set -> Tile Sheet Texture
    * Example:
      * Tile Sheet Texture used to be:   Platforms__32x32
      * Tile Sheet Texture is NOW:       Platforms__32x32_Padded  (which is a NEW texture)

Notice now in the TileSet that the following has changed:
* Tile Sheet Texture (as mentioned above)
* Border Margin (originally all 0's)
* Per-Tile Spacing (originally X,Y: 0,0.  Then changes to 4,4 by default I believe, not sure)

Also:
* It seems when "conditioning" the texture, the "Mip Gen Settings" on the texture are reset, so you need to change back to Mip Gen Setting:s No MipMaps. I don't know if it's "safe" to Apply Paper2D Texture settings on this new "padded" texture.

==================================================================================
65. Player and Game Mode

PaperZDCharacter
Inheriting from PaperZDCharacter
* PaperZDCharacter inherits from PaperCharacter which inherits from Character.
* Character has a CharacterMovementComponent
* We will use the CharacterMovementComponent for the player
* PaperZDCharacter also has an AnimationComponent.

Components:
* Because Character already has a CapsuleComponent, we do not need to create it in the constructor.
* With PaperZDCharacter:
  * CapsuleComponent
  * AnimationComponent
  * FlipbookComponent
  * CharacterMovementComponent
* We still need to create a SpringArmComponent and a CameraComponent

PlayerCharacter
BP_PlayerCharacter

NOTE:
* In PaperZDCharacter, they named the PaperFlipbookComponent "Sprite" for some reason
* Actually, this is in PaperCharacter():
  FName APaperCharacter::SpriteComponentName(TEXT("Sprite0"));
  Sprite = CreateOptionalDefaultSubobject<UPaperFlipbookComponent>(APaperCharacter::SpriteComponentName);

BP_PlayerCharacter settings:
* Sprite
  * Source flipbook: PFB_Captain_Idle
  * Material: TranslucentUnlitSpriteMaterial
  * Collision Presets: NoCollision
  * Translucency Sort Priority: 100
* SpringArm
  * Rotation: Z: -90 degrees
  * Do Collision Test: FALSE
* Camera
  * Projection Mode: Orthographic
  * Ortho Width:  1024
  * Scale: 0.01 (so the camera is not visible and blocking our view)
* CapsuleComponent:
  * Capsule Radius: 7
  * Capsule Half Height: 12
    * Note: My values were different for some reason. Half his values. Possibly PPU settings are different.

==================================================================================

